@layout PageLayout
@page "/text"

@using DSComponents.Input
@using DSComponents.Input.Enums
@using DSComponents.Input.Models
@using static DSComponents.Input.Models.DSCInputConfig

<h3>DSC Text</h3>

<p>The DSCText component is a custom input text box.  It is fully customizable and supports numerous attributes and variations such as <span class="cmpt">timeout</span>, <span class="cmpt">minimum</span> and <span class="cmpt">maximum</span> selections, <span class="cmpt">text </span> and <span class="cmpt">background</span> colors, and <span class="cmpt">disabled</span>.  The component also supports custom CSS and CSS Overrides, as well as provides event callbacks.</p>

<ComponentExample Item="_basicText">
	<Header>
		<h4>Basic Text</h4>
		<p>The basic text input.</p>
	</Header>

	<Example>
		<DSCText Config="@_basicText" />
	</Example>
</ComponentExample>

<ComponentExample Item="_timeoutText">
	<Header>
		<h4>Timeout Text</h4>
		<p>Adding a timeout value will give the component a delay before firing a callback method.  If a timeout value is provided, the <span class="cmpt">OnInput</span> parameter must be set as well.</p>
	</Header>

	<Example>
		<DSCText Config="@_timeoutText" OnInput="inputCallback" />
	</Example>
</ComponentExample>

@code {
	private DSCInputConfig _basicText = new DSCInputConfig
	{
		Name = "Basic Text",
		Label = new DSCLabelConfig { Label = "Basic Text", Position = LabelPosition.InlineTopLeft }
	};

	private DSCInputConfig _timeoutText = new DSCInputConfig
	{
		Name = "Timeout Text",
		Label = new DSCLabelConfig { Label = "Timeout Text", Position = LabelPosition.InlineTopLeft },
		Timeout = 1000
	};

	private void inputCallback(string val){}
}
