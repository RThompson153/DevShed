@layout PageLayout
@page "/checkbox"

@using DSComponents.Input
@using DSComponents.Enums
@using DSComponents.Input.Models
@using DevShed.Models
@using DevShed.Services

<div class="row">
	<h3 class="p-0">DSC Checkbox</h3>

	<p class="p-0">The DSCCheckbox component is a custom checkbox. To change the configuration settings, click the <span class="cmpt">Edit Config</span> button. The component has additional parameters that operate independently of the configurations.</p>
</div>

<ComponentExample Item="@_basicCheckbox">
	<Header>
		<h4>@_basicCheckbox.Name</h4>
	</Header>

	<Example>
		<DSCCheckbox Config="@_basicCheckbox" CheckedCallback="onCheck" />
	</Example>

	<Usage>
		<div class="col-12">
			&lt;<span class="cmpt">DSCCheckbox Config</span>&#61;&#34;<span class="bind">&#64;</span>_checkbox&#34; <span class="cmpt">CheckedCallback</span>&#61;&#34;onCheck&#34; &#47;&gt; <br />
		</div>
	</Usage>
</ComponentExample>

<ComponentExample Item="@_switchCheckbox">
	<Header>
		<h4>@_switchCheckbox.Name</h4>
	</Header>

	<Example>
		<DSCCheckbox Config="@_switchCheckbox" CheckedCallback="onCheck" />
	</Example>

	<Usage>
		<div class="col-12">
			&lt;<span class="cmpt">DSCCheckbox Config</span>&#61;&#34;<span class="bind">&#64;</span>_checkbox&#34; <span class="cmpt">CheckedCallback</span>&#61;&#34;onCheck&#34; &#47;&gt; <br />
		</div>
	</Usage>
</ComponentExample>

@code {
	[CascadingParameter]
	protected IStateContainer StateContainer { get; set; }

	private IEnumerable<string> _apiHeader = new List<string> { "Parameter", "Type", "Default Value", "Description" };
	private List<TableRow> _apiRows;

	protected override Task OnInitializedAsync()
	{
		_apiRows = StateContainer.BuildAPITable<DSCConfig>();

		return base.OnInitializedAsync();
	}

	private DSCConfig _basicCheckbox = new DSCConfig
	{
		Name = "Standard Checkbox",
		Label = new DSCLabelConfig { Label = "Standard Checkbox", Position = Position.Left }
	};

	private DSCConfig _switchCheckbox = new DSCConfig
		{
			Name = "Switch",
			Label = new DSCLabelConfig { Label = "Switch", Position = Position.Right },
			CheckboxType = CheckboxType.Switch
		};

	private void onCheck(bool isChecked)
	{
	}
}
