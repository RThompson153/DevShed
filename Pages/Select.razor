@layout PageLayout
@page "/select"

@using DSComponents.Input
@using DSComponents.Input.Enums
@using DSComponents.Input.Models
@using DevShed.Models

<div class="row">
	<h3 class="p-0">DSC Select</h3>

	<p class="p-0">The DSCSelect component is a custom dropdown menu that displays a selectable list of items.  It is fully customizable and supports numerous attributes and variations such as <span class="cmpt">multiple</span>, <span class="cmpt">searchable</span>, <span class="cmpt">minimum</span> and <span class="cmpt">maximum</span> selections, <span class="cmpt">text </span> and <span class="cmpt">background</span> colors, and <span class="cmpt">disabled</span>.  The component also supports custom CSS and CSS Overrides, as well as provides event callbacks.</p>
</div>

<ComponentExample Item="@_basicSelect">
	<Header>
		<h4>Basic Select</h4>
		<p>The basic single select.</p>
	</Header>

	<Example>
		<DSCSelect Config="@_basicSelect" @bind-Expanded="@_basicSelect.Expanded">
			@foreach(var item in _basicSelect.SelectItems)
			{
				<DSCSelectItem Value="@item"  />
			}
		</DSCSelect>
	</Example>

	<Usage>
		<div class="col-6">
			&lt;<span class="cmpt">DSCSelect Config</span>&#61;&#34;<span class="bind">&#64;</span>_select&#34; <span class="bind">&#64;bind&#45;Expanded</span>&#61;&#34;<span class="bind">&#64;</span>_select.Expanded&#34;&gt; <br />
			&nbsp;&nbsp;&nbsp;&nbsp;<span class="bind">&#64;</span><span class="code">foreach</span>&#40;<span class="key">var</span> <span class="var">item</span> <span class="code">in</span> _select.SelectItems&#41; <br />
			&nbsp;&nbsp;&nbsp;&nbsp;&#123; <br />
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;<span class="cmpt">DSCSelectItem Value</span>&#61;&#34;<span class="bind">&#64;</span><span class="var">item</span>&#34; &#47;&gt; <br />
			&nbsp;&nbsp;&nbsp;&nbsp;&#125 <br />
			&lt;&#47;<span class="cmpt">DSCSelect</span>&gt;
		</div>
	</Usage>
</ComponentExample>

<ComponentExample Item="@_multipleSelect">
	<Header>
		<h4>Multiple Select</h4>
		<p>Setting the <span class="cmpt">Multiple</span> property to <span class="cmpt">true </span>in the configuration model allows for multiple selections.</p>
	</Header>

	<Example>
		<DSCSelect Config="@_multipleSelect" @bind-Expanded="@_multipleSelect.Expanded">
			@foreach(var item in _multipleSelect.SelectItems)
			{
				<DSCSelectItem Value="@item" />
			}
		</DSCSelect>
	</Example>

	<Usage>
		<div class="col-6">
			&lt;<span class="cmpt">DSCSelect Config</span>&#61;&#34;<span class="bind">&#64;</span>_select&#34; <span class="bind">&#64;bind&#45;Expanded</span>&#61;&#34;<span class="bind">&#64;</span>_select.Expanded&#34;&gt; <br />
			&nbsp;&nbsp;&nbsp;&nbsp;<span class="bind">&#64;</span><span class="code">foreach</span>&#40;<span class="key">var</span> <span class="var">item</span> <span class="code">in</span> _select.SelectItems&#41; <br />
			&nbsp;&nbsp;&nbsp;&nbsp;&#123; <br />
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;<span class="cmpt">DSCSelectItem Value</span>&#61;&#34;<span class="bind">&#64;</span><span class="var">item</span>&#34; &#47;&gt; <br />
			&nbsp;&nbsp;&nbsp;&nbsp;&#125 <br />
			&lt;&#47;<span class="cmpt">DSCSelect</span>&gt;
		</div>
	</Usage>
</ComponentExample>

<ComponentExample Item="@_seachableSelect">
	<Header>
		<h4>Searchable</h4>
		<p>Setting the <span class="cmpt">Searchable</span> property to <span class="cmpt">true </span>in the configuration model allows for multiple selections. This can be used as a single or multiple select.</p>
	</Header>

	<Example>
		<DSCSelect Config="@_seachableSelect" @bind-Expanded="@_seachableSelect.Expanded">
			@foreach(var item in _seachableSelect.SelectItems)
			{
				<DSCSelectItem Value="@item" />
			}
		</DSCSelect>
	</Example>

	<Usage>
		<div class="col-6">
			&lt;<span class="cmpt">DSCSelect Config</span>&#61;&#34;<span class="bind">&#64;</span>_select&#34; <span class="bind">&#64;bind&#45;Expanded</span>&#61;&#34;<span class="bind">&#64;</span>_select.Expanded&#34;&gt; <br />
			&nbsp;&nbsp;&nbsp;&nbsp;<span class="bind">&#64;</span><span class="code">foreach</span>&#40;<span class="key">var</span> <span class="var">item</span> <span class="code">in</span> _select.SelectItems&#41; <br />
			&nbsp;&nbsp;&nbsp;&nbsp;&#123; <br />
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;<span class="cmpt">DSCSelectItem Value</span>&#61;&#34;<span class="bind">&#64;</span><span class="var">item</span>&#34; &#47;&gt; <br />
			&nbsp;&nbsp;&nbsp;&nbsp;&#125 <br />
			&lt;&#47;<span class="cmpt">DSCSelect</span>&gt;
		</div>
	</Usage>
</ComponentExample>

<ComponentExample Item="@_disabledSelect">
	<Header>
		<h4>Disabled</h4>
		<p>Setting the <span class="cmpt">Disabled</span> property to <span class="cmpt">true </span>in the configuration model disables the component.</p>
	</Header>
	<Example>
		<DSCSelect Config="@_disabledSelect" @bind-Expanded="@_disabledSelect.Expanded">
			@foreach(var item in _disabledSelect.SelectItems)
			{
				<DSCSelectItem Value="@item" />
			}
		</DSCSelect>
	</Example>

	<Usage>
		<div class="col-6">
			&lt;<span class="cmpt">DSCSelect Config</span>&#61;&#34;<span class="bind">&#64;</span>_select&#34; <span class="bind">&#64;bind&#45;Expanded</span>&#61;&#34;<span class="bind">&#64;</span>_select.Expanded&#34;&gt; <br />
			&nbsp;&nbsp;&nbsp;&nbsp;<span class="bind">&#64;</span><span class="code">foreach</span>&#40;<span class="key">var</span> <span class="var">item</span> <span class="code">in</span> _select.SelectItems&#41; <br />
			&nbsp;&nbsp;&nbsp;&nbsp;&#123; <br />
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;<span class="cmpt">DSCSelectItem Value</span>&#61;&#34;<span class="bind">&#64;</span><span class="var">item</span>&#34; &#47;&gt; <br />
			&nbsp;&nbsp;&nbsp;&nbsp;&#125 <br />
			&lt;&#47;<span class="cmpt">DSCSelect</span>&gt;
		</div>
	</Usage>
</ComponentExample>

<ComponentExample Item="@_minMaxSelect">
	<Header>
		<h4>Minimum / Maximum</h4>
		<p>Setting the <span class="cmpt">Minimum/Maximum</span> properties limits the number of selections that can be made. If no values are provided, the minimum number of selections is set to zero and the maximum is set to the total number of items by default.</p>
	</Header>
	<Example>
		<DSCSelect Config="@_minMaxSelect" @bind-Expanded="@_minMaxSelect.Expanded">
			@foreach(var item in _minMaxSelect.SelectItems)
			{
				<DSCSelectItem Value="@item" />
			}
		</DSCSelect>
	</Example>

	<Usage>
		<div class="col-6">
			&lt;<span class="cmpt">DSCSelect Config</span>&#61;&#34;<span class="bind">&#64;</span>_select&#34; <span class="bind">&#64;bind&#45;Expanded</span>&#61;&#34;<span class="bind">&#64;</span>_select.Expanded&#34;&gt; <br />
			&nbsp;&nbsp;&nbsp;&nbsp;<span class="bind">&#64;</span><span class="code">foreach</span>&#40;<span class="key">var</span> <span class="var">item</span> <span class="code">in</span> _select.SelectItems&#41; <br />
			&nbsp;&nbsp;&nbsp;&nbsp;&#123; <br />
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;<span class="cmpt">DSCSelectItem Value</span>&#61;&#34;<span class="bind">&#64;</span><span class="var">item</span>&#34; &#47;&gt; <br />
			&nbsp;&nbsp;&nbsp;&nbsp;&#125 <br />
			&lt;&#47;<span class="cmpt">DSCSelect</span>&gt;
		</div>
	</Usage>
</ComponentExample>

<APIComponent Header="@_apiHeader">
	<tr><td colspan="@_apiHeader.Count()"><h5>DSCSelect</h5></td></tr>
	<tr>
		<td>Config</td>
		<td>Required - <span class="cmpt">DSCInputConfig</span></td>
		<td>N/A</td>
		<td>The <span class="cmpt">DSCInputConfig </span> model used to create the component.</td>
	</tr>
	<tr>
		<td>Expanded</td>
		<td>Required - bool</td>
		<td>False</td>
		<td>Component expanded state.</td>
	</tr>
	<tr><td colspan="@_apiHeader.Count()"><h5>DSCSelectItem</h5></td></tr>
	<tr>
		<td>Value</td>
		<td>Required - object</td>
		<td>null</td>
		<td>Value of the select item.</td>
	</tr>
	<tr>
		<td>SelectCallback</td>
		<td>Optional - EventCallback</td>
		<td>null</td>
		<td>Callback method to fire when selecting an item.</td>
	</tr>
	<tr><td colspan="@_apiHeader.Count()"><h5>DSCInputConfig</h5></td></tr>
	@foreach(var row in _apiRows)
	{
		<tr>
			<td>@row.Property</td>
			<td>@row.Type</td>
			<td>@row.DefaultValue</td>
			<td>@row.Description</td>
		</tr>
	}
	<tr><td colspan="@_apiHeader.Count()"><h5>DSCLabelConfig</h5></td></tr>
	<tr>
		<td>Label</td>
		<td>Optional - string</td>
		<td>null</td>
		<td>The label name for the component.</td>
	</tr>
	<tr>
		<td>LabelPosition</td>
		<td>Optional - <span class="cmpt">LabelPosition</span></td>
		<td>null</td>
		<td>The position of the component's label.</td>
	</tr>
	<tr><td colspan="@_apiHeader.Count()"><h5>DSCService</h5></td></tr>
	<tr>
		<td>IDSCService</td>
		<td>Required</td>
		<td>N/A</td>
		<td>Injectable service used to manage component interactions.</td>
	</tr>
	<tr><td colspan="@_apiHeader.Count()"><h6>Methods</h6></td></tr>
	<tr>
		<td>CloseDropdowns</td>
		<td>Optional</td>
		<td>N/A</td>
		<td>Closes all open dropdowns. Place as a click event on the root element of your page.</td>
	</tr>
</APIComponent>

@code {
	private IEnumerable<string> _apiHeader = new List<string> { "Parameter", "Type", "Default Value", "Description" };
	private List<TableRow> _apiRows;
	private DSCInputConfig _apiModel;

	private DSCInputConfig _basicSelect = new DSCInputConfig
	{
		Name = "Basic",
		SelectItems = new List<object>{ "Item 1", "Item 2", "Item 3" },
		Label = new DSCLabelConfig {Label = "Basic Select", Position = LabelPosition.InlineTopLeft }
	};

	private DSCInputConfig _multipleSelect = new DSCInputConfig
	{
		Name = "Multiple",
		SelectItems = new List<object> { "Item 1", "Item 2", "Item 3" },
		Multiple = true,
		Label = new DSCLabelConfig { Label = "Multiple Select", Position = LabelPosition.InlineTop }
	};

	private DSCInputConfig _seachableSelect = new DSCInputConfig
	{
		Name = "Search",
		SelectItems = new List<object>
		{
			"Item 1",
			"Item 2",
			"Item 3"
		},
		Searchable = true,
		Placeholder = "Search...",
		Label = new DSCLabelConfig { Label = "Search", Position = LabelPosition.InlineTopRight }
	};

	private DSCInputConfig _disabledSelect = new DSCInputConfig
	{
		Name = "Disabled",
		SelectItems = new List<object>
		{
			"Item 1",
			"Item 2",
			"Item 3"
		},
		Disabled = true,
		Label = new DSCLabelConfig { Label = "Disabled", Position = LabelPosition.InlineTopLeft }
	};

	private DSCInputConfig _minMaxSelect = new DSCInputConfig
	{
		Name = "Min/Max",
		SelectItems = new List<object>
		{
			"Item 1",
			"Item 2",
			"Item 3",
			"Item 4",
			"Item 5"
		},
		Multiple = true,
		Minimum = 1,
		Maximum = 3,
		Label = new DSCLabelConfig { Label = "Min/Max", Position = LabelPosition.InlineTop }
	};

	protected override Task OnInitializedAsync()
	{
		_apiModel = new DSCInputConfig();
		var properties = _apiModel.GetType().GetProperties();

		_apiRows = new List<TableRow>();

		foreach(var prop in properties)
		{
			var attr = prop.GetCustomAttributes(true).FirstOrDefault() as DSCInputAttribute;

			if (attr is null)
				continue;

			var row = new TableRow
			{
				Property = prop.Name,
				Type = $"{((attr?.Required == true) ? "Required" : "Optional")} - {attr?.Type}",
				Description = attr?.Description ?? "",
				DefaultValue = prop.GetValue(_apiModel)?.ToString() ?? "null"
			};

			_apiRows.Add(row);
		}
		return base.OnInitializedAsync();
	}
}