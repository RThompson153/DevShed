@layout PageLayout
@page "/select"

@using DSComponents.Input
@using DSComponents.Input.Enums
@using DSComponents.Input.Models
@using DevShed.Services

<h3>DSC Select</h3>

<p>Toggleable, select menu.</p>

<ComponentExample>
	<Example>
		<DSCSelect Config="@_standardSelect" @bind-Expanded="@_standardSelect.Expanded">
			@foreach(var item in _standardSelect.SelectItems)
			{
				<DSCSelectItem Value="@item" />
			}
		</DSCSelect>
	</Example>

	<Markup>
		&lt;DSCSelect Config&#61;&#34;&#64;_select&#34; &#64;bind&#45;Expanded&#61;&#34;&#64;_select.Expanded&#34;&gt; <br />
		&nbsp;&nbsp;&nbsp;&nbsp;&#64;foreach&#40;var item in _select.SelectItems&#41; <br />
		&nbsp;&nbsp;&nbsp;&nbsp;&#123; <br />
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;DSCSelectItem Value&#61;&#34;&#64;item&#34; &#47;&gt; <br />
		&nbsp;&nbsp;&nbsp;&nbsp;&#125 <br />
		&lt;&#47;DSCSelect&gt;
	</Markup>
</ComponentExample>

@code {
	[CascadingParameter]
	protected IStateContainer StateContainer { get; set; }

	private DSCInputConfig _standardSelect = new DSCInputConfig
	{
		Name = "Standard", SelectItems = new List<object>{ "Item 1", "Item 2", "Item 3" }, Label = new DSCLabelConfig {Label = "Standard Select", Position = LabelPosition.TopLeft } 
	};

	//	new DSCInputConfig {Name = "Multiple", SelectItems = new List<object>{ "Item 4", "Item 5", "Item 6" } , Multiple = true, Label = new DSCLabelConfig {Label = "Multiple Select", Position = LabelPosition.InlineTopLeft }},
	//	new DSCInputConfig {Name = "Multiple Search", SelectItems = new List<object>{ "Item 7", "Item 8", "Item 9" } , Multiple = true, Searchable = true, Label = new DSCLabelConfig {Label = "Multiple Search", Position = LabelPosition.InlineTopRight } },
	//	new DSCInputConfig {Name = "No Label", SelectItems = new List<object>{ "Item 1", "Item 2", "Item 3" } }
	//};
}