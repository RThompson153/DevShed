@layout PageLayout
@page "/radio"

@using DSComponents.Input
@using DSComponents.Enums
@using DevShed.Models
@using DevShed.Services

<div class="row">
	<h3 class="p-0">DSC Radio</h3>

	<p class="p-0">The DSCRadio component is a custom checkbox. To change the configuration settings, click the <span class="cmpt">Edit Config</span> button. The component has additional parameters that operate independently of the configurations.</p>
</div>

<ComponentExample Item="@(_basicRadioGroup.FirstOrDefault())">
	<Header>
		<h4>@(_basicRadioGroup.FirstOrDefault().Name)</h4>
	</Header>

	<Example>
		<DSCRadioGroup GroupName="@(_basicRadioGroup.FirstOrDefault().Name)">
			@foreach(var item in _basicRadioGroup)
			{
				<DSCRadio Config="@item" Value="@(item.Label.Label)" CheckCallback="onCheck" />
			}
		</DSCRadioGroup>
			
	</Example>

	<Usage>
		<div class="col-12">
			&lt;<span class="cmpt">DSCRadio Config</span>&#61;&#34;<span class="bind">&#64;</span>_radio&#34; <span class="cmpt">CheckedCallback</span>&#61;&#34;onCheck&#34; &#47;&gt; <br />
		</div>
	</Usage>
</ComponentExample>

<ComponentExample Item="@(_basicRadioGroup1.FirstOrDefault())">
	<Header>
		<h4>@(_basicRadioGroup1.FirstOrDefault().Name)</h4>
	</Header>

	<Example>
		<DSCRadioGroup GroupName="@(_basicRadioGroup1.FirstOrDefault().Name)">
			@foreach(var item in _basicRadioGroup1)
			{
				<DSCRadio Config="@item" Value="@(item.Label.Label)" />
			}
		</DSCRadioGroup>
			
	</Example>

	<Usage>
		<div class="col-12">
			&lt;<span class="cmpt">DSCRadio Config</span>&#61;&#34;<span class="bind">&#64;</span>_radio&#34; <span class="cmpt">CheckedCallback</span>&#61;&#34;onCheck&#34; &#47;&gt; <br />
		</div>
	</Usage>
</ComponentExample>

@code {
	[CascadingParameter]
	protected IStateContainer StateContainer { get; set; }

	private List<TableRow> _apiRows;
	private string _selectedOption;

	protected override Task OnInitializedAsync()
	{
		_apiRows = StateContainer.BuildAPITable<DSCConfig>();

		return base.OnInitializedAsync();
	}

	protected override Task OnParametersSetAsync()
	{
		return base.OnParametersSetAsync();
	}

	private List<DSCConfig> _basicRadioGroup = new List<DSCConfig>
	{
		new DSCConfig
		{
			Name = "Standard Radio",
			Label = new DSCLabelConfig { Label = "Option 0", Position = Position.Left },
		},
		new DSCConfig
		{
			Name = "Standard Radio",
			Label = new DSCLabelConfig { Label = "Option 1", Position = Position.Left }
		},
	};

	private List<DSCConfig> _basicRadioGroup1 = new List<DSCConfig>
	{
		new DSCConfig
		{
			Name = "Standard Radio1",
			Label = new DSCLabelConfig { Label = "Option 3", Position = Position.Left },
		},
		new DSCConfig
		{
			Name = "Standard Radio1",
			Label = new DSCLabelConfig { Label = "Option 4", Position = Position.Left }
		},
	};

	private void onCheck(string value)
	{
		_selectedOption = value;
	}
}
