@using DSComponents.Input.Models
@using System.Text.Json
<div class="row mt-3 cursor-pointer @((!_expanded) ? "border-bottom" : "")">
	<div class="col-12 d-flex p-0 component-example-head" @onclick="toggleExpanded">
		<div class="d-block">
			@Header
		</div>

		<i class="my-auto oi oi-chevron-@((_expanded) ? "top" : "bottom")"></i>
	</div>
</div>

@if(_expanded)
{
	<div class="row component-example border py-3 bg-light">
		<div class="col-12 d-flex">
			<div class="col-2 example">
				@Example
			</div>

			<i class="oi oi-code my-auto cursor-pointer" @onclick="@(() => _section = "edit")"></i>
		</div>

		<div class="col-12 d-flex mt-3 py-1 border-top border-bottom">
			<span class="section cursor-pointer" @onclick="@(() => _section = "usage")">Usage</span>
			<span class="section cursor-pointer" @onclick="@(() => _section = "config")">Configuration</span>
		</div>

		<div class="col-12 mt-3 py-1 markup">
			@switch(_section)
			{
				case "config":
					@Code
					break;
				case "edit":
					<div class="col-6 edit">
						<textarea class="col-12"></textarea>
						<button type="button" class="cmpt btn btn-secondary py-0">Save</button>
					</div>
					break;
				default:
					@Markup
					break;
			}
		</div>
	</div>
}


@code {
	[Parameter]
	public RenderFragment Header { get; set; }
	[Parameter]
	public RenderFragment Example { get; set; }
	[Parameter]
	public RenderFragment Markup { get; set; }
	[Parameter]
	public RenderFragment Code { get; set; }
	[Parameter]
	public DSCInputConfig Item { get; set; }

	private string _section = "usage";
	private bool _expanded;

	private void toggleExpanded() => _expanded = !_expanded;

	protected override void OnParametersSet()
	{
		var json = JsonSerializer.Ser
		base.OnParametersSet();
	}
}
